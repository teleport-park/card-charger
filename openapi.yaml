openapi: 3.0.0
info:
  title: Charging/Discharging API
  version: 1.0.0


servers:
  - description: Development server
    url: https://teleport.cheshirskycode.name/billing/charge

  - description: Temporary production
    url: https://v0.api.teleport-park.com/billing/charge

paths:

  /:card_id:

    parameters:
      - name: card_id
        in: path
        schema:
          type: string
          minLength: 10

    get:
      summary: Returns info about card
      security: [{ ApiToken: [] }]
      responses:
        200:
          description: Returns info by card_id
          content:
            application/json:
              schema: { $ref: "#/components/schemas/AccountInfo" }

        404:
          description: Card not found
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }

    put:
      summary: Charges/Discharges account by card ID
      security: [{ ApiToken: [] }]
      requestBody: { $ref: "#/components/requestBodies/ChargeRequest" }

      responses:
        201:
          description: Successful request, card transaction successfully completed
          content:
            application/json:
              schema: { $ref: "#/components/schemas/AccountInfo" }
        400:
          description: Invalid data provided
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }
        406:
          description: Unsuccessfull request, transaction failed
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }

components:

  schemas:

    Currency:
      type: string
      enum: [ "TLPVR" ]

    Charge:
      type: object
      required: [ amount, currency, comment ]
      properties:
        amount: { type: number, minimum: 0, maximum: 999 }
        currency: { $ref: "#/components/schemas/Currency" }
        comment: { type: string }

    AccountSummary:
      type: object
      required: [ account_id, balance ]
      properties:
        account_id: { type: string }
        balance: { type: number, minimum: 0 }
        currency: { $ref: "#/components/schemas/Currency" }

    Error:
      type: object
      required: [ error ]
      properties:
        error: { type: string }
        message: { type: string }

  requestBodies:
    ChargeRequest:
      required: true
      description: Transaction request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Charge"

  securitySchemes:
    ApiToken:
      description: Authenticate through bearer token in request
      type: http
      scheme: bearer
