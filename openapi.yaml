openapi: 3.0.0
info:
  title: Charging/Discharging API
  version: 1.0.0

paths:

  /info/:card_id:

    parameters:
      - name: card_id
        in: path
        schema:
          type: string
          minLength: 10

    get:
      summary: Returns info about card
      responses:
        200:
          description: Returns info by card_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  card_id: { type: string }
                  balance: { type: number, minimum: 0 }
        404:
          description: Card not found
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }

  /charge:
    post:
      summary: Request to charge card
      security: [{ ApiToken: [] }]
      requestBody: { $ref: "#/components/requestBodies/AmountRequest" }
      responses:
        201:
          description: Successful request
        400:
          description: Something wrong happen
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }

  /discharge:
    post:
      summary: Request to discharge card
      security: [{ ApiToken: [] }]
      requestBody: { $ref: "#/components/requestBodies/AmountRequest" }
      responses:
        201:
          description: Successful request
        400:
          description: Something wrong happen
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }
        402:
          description: Not enought founds
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Error" }

components:

  schemas:
    Amount:
      type: object
      required: [ card_id, amount, currency, comment ]
      properties:
        card_id: { type: string }
        amount: { type: number, minimum: 0, maximum: 999 }
        currency: { type: string, enum: [ "coin" ]}
        comment: { type: string }

    Error:
      type: object
      required: [ error ]
      properties:
        error: { type: string }
        message: { type: string }

  requestBodies:
    AmountRequest:
      required: true
      description: Transaction request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Amount"

  securitySchemes:
    ApiToken:
      description: Authenticate through bearer token in request
      type: http
      scheme: bearer

  responses:
    Error:
      description: Error
      content:
        application/json:
          schema: { $ref: "#/components/schemas/Error" }
